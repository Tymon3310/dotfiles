# ----------------------------------------------------- 
# Key bindings
# ----------------------------------------------------- 

# SUPER KEY
$mainMod = SUPER
$SCRIPTS = ~/.config/hypr/scripts
source = ~/pref.conf

# Applications
bind = $mainMod, RETURN, exec, $TERM
bind = $mainMod, B, exec, $BROWSER
bind = $mainMod, E, exec, $FILE_MANAGER
bind = $mainMod CTRL, E, exec, $EMOJI_PICKER
bind = $mainMod CTRL, C, exec, $CALCULATOR
bind = $mainMod CTRL, RETURN, exec, $LAUNCHER
bind = $mainMod, space, exec, $LAUNCHER

# Windows
bind = $mainMod, Q, killactive
bind = $mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill
bind = $mainMod, F, fullscreen, 0
bind = $mainMod, M, fullscreen, 1
bind = $mainMod, T, togglefloating
bind = $mainMod SHIFT, T, workspaceopt, allfloat
bind = $mainMod, J, togglesplit
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bind = $mainMod SHIFT, right, resizeactive, 100 0
bind = $mainMod SHIFT, left, resizeactive, -100 0
bind = $mainMod SHIFT, down, resizeactive, 0 100
bind = $mainMod SHIFT, up, resizeactive, 0 -100
bind = $mainMod, G, togglegroup
bind = $mainMod, K, swapsplit
bind = $mainMod ALT, left, swapwindow, l
bind = $mainMod ALT, right, swapwindow, r
bind = $mainMod ALT, up, swapwindow, u
bind = $mainMod ALT, down, swapwindow, d
binde = ALT,Tab,cyclenext
binde = ALT,Tab,bringactivetotop

# Actions
bind = ,PRINT, exec, $SCREENSHOT
bind = $mainMod SHIFT, S, exec, $SCREENSHOT
bind = $mainMod CTRL SHIFT, S, exec, $SCRIPTS/ocr.sh
bind = $mainMod CTRL, Q, exec, nwg-bar
bind = $mainMod SHIFT, B, exec, $SCRIPTS/waybar.sh
bind = $mainMod, V, exec, $CLIP

# Workspaces
# Switch workspaces with mainMod + [0-10]
bind = $mainMod, 1, split-workspace, 1
bind = $mainMod, 2, split-workspace, 2
bind = $mainMod, 3, split-workspace, 3
bind = $mainMod, 4, split-workspace, 4
bind = $mainMod, 5, split-workspace, 5
bind = $mainMod, 6, split-workspace, 6
bind = $mainMod, 7, split-workspace, 7
bind = $mainMod, 8, split-workspace, 8
bind = $mainMod, 9, split-workspace, 9
bind = $mainMod, 0, split-workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-10]
bind = $mainMod SHIFT, 1, split-movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, split-movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, split-movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, split-movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, split-movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, split-movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, split-movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, split-movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, split-movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, split-movetoworkspacesilent, 10

bind = CTRL ALT $mainMod SHIFT, comma, movecurrentworkspacetomonitor, l
bind = CTRL ALT $mainMod SHIFT, period, movecurrentworkspacetomonitor, r


#bind = $mainMod, Tab, workspace, m+1                                                       # Open next workspace
bind = $mainMod SHIFT, Tab, workspace, m-1

bind = $mainMod CTRL, 1, exec, $SCRIPTS/moveTo.sh 1
bind = $mainMod CTRL, 2, exec, $SCRIPTS/moveTo.sh 2
bind = $mainMod CTRL, 3, exec, $SCRIPTS/moveTo.sh 3
bind = $mainMod CTRL, 4, exec, $SCRIPTS/moveTo.sh 4
bind = $mainMod CTRL, 5, exec, $SCRIPTS/moveTo.sh 5
bind = $mainMod CTRL, 6, exec, $SCRIPTS/moveTo.sh 6
bind = $mainMod CTRL, 7, exec, $SCRIPTS/moveTo.sh 7
bind = $mainMod CTRL, 8, exec, $SCRIPTS/moveTo.sh 8
bind = $mainMod CTRL, 9, exec, $SCRIPTS/moveTo.sh 9
bind = $mainMod CTRL, 0, exec, $SCRIPTS/moveTo.sh 10

bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bind = $mainMod CTRL, down, workspace, empty

# Passthrough SUPER KEY to Virtual Machine
bind = $mainMod, P, submap, VM
submap = VM
bind = SUPER, Escape, submap, reset
submap = reset

# btop on special workspace
bind = $mainMod SHIFT, F, exec, pgrep btop && hyprctl dispatch togglespecialworkspace btop || kitty --class btop --config ~/.config/kitty/headless.conf -e btop &
#bind = $mainMod SHIFT, F, exec, pgrep btop && hyprctl dispatch togglespecialworkspace btop || (kitty --class btop -e btop & hyprctl dispatch focusmonitor DP-1; hyprctl dispatch togglespecialworkspace btop)
#bind = $mainMod SHIFT, F, exec, pgrep btop && hyprctl dispatch togglespecialworkspace btop || (kitty --class btop -e btop & sleep 0.1 && hyprctl dispatch centerwindow)
#bind = $mainMod SHIFT, F, exec, ~/.config/hypr/scripts/btop_toggle.sh
#bind = $mainMod, tab, hyprtasking:toggle, all

#Custom media keys
$player = spotify
# bind = , XF86MonBrightnessUp, exec, brightnessctl -q s +10%
# bind = , XF86MonBrightnessDown, exec, brightnessctl -q s 10%-
bind = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%+
bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%-
bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = , XF86AudioPlay, exec, playerctl -p $player play-pause
bind = , XF86AudioPause, exec, playerctl -p $player pause
# bind = , XF86AudioNext, exec, playerctl -p $player next
# bind = , XF86AudioPrev, exec, playerctl -p $player previous
bind = , XF86AudioNext, exec, playerctl -p $player volume 0.05+
bind = , XF86AudioPrev, exec, playerctl -p $player volume 0.05-
# bind = , XF86AudioForward, exec, playerctl -p $player next
# bind = , XF86AudioBackward, exec, playerctl -p $player previous
bind = , XF86AudioForward, exec, playerctl -i $player position 1+
bind = , XF86AudioRewind, exec, playerctl -i $player position 1-
bind = , XF86AudioStop, exec, playerctl -i $player play-pause
bind = , XF86Forward, exec, playerctl -p $player position 1+
bind = , XF86Back, exec, playerctl -p $player position 1-
bind = , XF86HomePage, exec, playerctl -p $player next
bind = , XF86Search, exec, playerctl -p $player previous
bind = , XF86MonBrightnessUp, exec, playerctl -p $player shuffle toggle
bind = , XF86MonBrightnessDown, exec, playerctl -p $player loop $(if [[ "$(playerctl -p $player loop)" == "Track" ]]; then echo "Playlist"; elif [[ "$(playerctl -p $player loop)" == "Playlist" ]]; then echo "None"; else echo "Track"; fi)
# bind = , Cancel, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle
# bind = , XF86Reload, exec, wpctl set-volume @DEFAULT_SOURCE@ 5%+
# bind = , XF86Favorites, exec, wpctl set-volume @DEFAULT_SOURCE@ 5%-


bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bind = , XF86Lock, exec, hyprlock
bind = , code:238, exec, brightnessctl -d smc::kbd_backlight s +10